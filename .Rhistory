dplyr::select(game_id, espn, home_team, away_team, week)
# get live games
live_games <- readRDS(url(
"http://www.habitatring.com/games_alt.rds"
)) %>%
dplyr::filter(
# hasn't finished yet
is.na(result),
# happening today
gameday == as.character(lubridate::today("US/Pacific"))
) %>%
dplyr::mutate(
# there's probably a better way to do this but it seems to work
#
espn = dplyr::case_when(
# hard code for playoff games not in Lee's file
game_id == "2021_19_LV_CIN"   ~ "401326627",
game_id == "2021_19_NE_BUF"   ~ "401326626",
game_id == "2021_19_PHI_TB"   ~ "401326630",
game_id == "2021_19_SF_DAL"   ~ "401326629",
game_id == "2021_19_PIT_KC"   ~ "401326628",
game_id == "2021_19_ARI_LA"   ~ "401326625",
TRUE ~ espn
),
started = is.null(httr::content(httr::GET(game_url, query = list(event = espn)))[["drives"]][["previous"]][1])[1]
) %>%
dplyr::filter(started == 1) %>%
# dplyr::filter(grepl("2016", game_id, fixed = T)) %>%
# dplyr::filter(espn == "401326626") %>%
dplyr::select(game_id, espn, home_team, away_team, week)
# get live games
live_games <- readRDS(url(
"http://www.habitatring.com/games_alt.rds"
)) %>%
dplyr::filter(
# hasn't finished yet
is.na(result),
# happening today
gameday == as.character(lubridate::today("US/Pacific"))
) %>%
dplyr::mutate(
# there's probably a better way to do this but it seems to work
#
espn = dplyr::case_when(
# hard code for playoff games not in Lee's file
game_id == "2021_19_LV_CIN"   ~ "401326627",
game_id == "2021_19_NE_BUF"   ~ "401326626",
game_id == "2021_19_PHI_TB"   ~ "401326630",
game_id == "2021_19_SF_DAL"   ~ "401326629",
game_id == "2021_19_PIT_KC"   ~ "401326628",
game_id == "2021_19_ARI_LA"   ~ "401326625",
TRUE ~ espn
),
started = httr::content(httr::GET(game_url, query = list(event = espn)))[["drives"]][["previous"]]
) %>%
dplyr::filter(started == 1) %>%
# dplyr::filter(grepl("2016", game_id, fixed = T)) %>%
# dplyr::filter(espn == "401326626") %>%
dplyr::select(game_id, espn, home_team, away_team, week)
# get live games
live_games <- readRDS(url(
"http://www.habitatring.com/games_alt.rds"
)) %>%
dplyr::filter(
# hasn't finished yet
is.na(result),
# happening today
gameday == as.character(lubridate::today("US/Pacific"))
) %>%
dplyr::mutate(
# there's probably a better way to do this but it seems to work
#
espn = dplyr::case_when(
# hard code for playoff games not in Lee's file
game_id == "2021_19_LV_CIN"   ~ "401326627",
game_id == "2021_19_NE_BUF"   ~ "401326626",
game_id == "2021_19_PHI_TB"   ~ "401326630",
game_id == "2021_19_SF_DAL"   ~ "401326629",
game_id == "2021_19_PIT_KC"   ~ "401326628",
game_id == "2021_19_ARI_LA"   ~ "401326625",
TRUE ~ espn
),
started = is.null(httr::content(httr::GET(game_url, query = list(event = espn)))[["drives"]][["previous"]])[[1]]
) %>%
dplyr::filter(started == 1) %>%
# dplyr::filter(grepl("2016", game_id, fixed = T)) %>%
# dplyr::filter(espn == "401326626") %>%
dplyr::select(game_id, espn, home_team, away_team, week)
length(is.null(httr::content(httr::GET(game_url, query = list(event = "401326625")))[["drives"]][["previous"]]))
length(is.null(httr::content(httr::GET(game_url, query = list(event = "401326627")))[["drives"]][["previous"]]))
length(is.null(httr::content(httr::GET(game_url, query = list(event = "40126627")))[["drives"]][["previous"]]))
httr::content(httr::GET(game_url, query = list(event = "40126627")))[["drives"]][["previous"]]
length(is.null(httr::content(httr::GET(game_url, query = list(event = "40126627")))[["drives"]][["previous"]]))
?httr::GET
length(is.null(httr::content(httr::GET(game_url))[["drives"]][["previous"]]))
is.null(httr::content(httr::GET(game_url))[["drives"]][["previous"]])
game_url <- glue::glue("http://site.api.espn.com/apis/site/v2/sports/football/nfl/summary")
raw_get <- httr::GET(game_url, query = list(event = game_id, enable = "ranks,odds,linescores,logos"))
httr::stop_for_status(raw_get)
raw_json <- httr::content(raw_get)
game_id <- "40132666"
raw_get <- httr::GET(game_url, query = list(event = game_id, enable = "ranks,odds,linescores,logos"))
httr::stop_for_status(raw_get)
game_id <- "401326626"
raw_get <- httr::GET(game_url, query = list(event = game_id, enable = "ranks,odds,linescores,logos"))
httr::stop_for_status(raw_get)
raw_json <- httr::content(raw_get)
nfl_pbp <- raw_json[["drives"]][["previous"]]
is.null(raw_json[["drives"]][["previous"]])
game_id <- "40132626"
raw_get <- httr::GET(game_url, query = list(event = game_id, enable = "ranks,odds,linescores,logos"))
httr::stop_for_status(raw_get)
raw_json <- httr::content(raw_get)
is.null(raw_json[["drives"]][["previous"]])
nfl_pbp <- raw_json[["drives"]][["previous"]]
# get live games
live_games <- readRDS(url(
"http://www.habitatring.com/games_alt.rds"
)) %>%
# dplyr::filter(
#
#   # hasn't finished yet
#   is.na(result),
#
#   # happening today
#   gameday == as.character(lubridate::today("US/Pacific"))
#
# ) %>%
dplyr::mutate(
# there's probably a better way to do this but it seems to work
#
espn = dplyr::case_when(
# hard code for playoff games not in Lee's file
game_id == "2021_19_LV_CIN"   ~ "401326627",
game_id == "2021_19_NE_BUF"   ~ "401326626",
game_id == "2021_19_PHI_TB"   ~ "401326630",
game_id == "2021_19_SF_DAL"   ~ "401326629",
game_id == "2021_19_PIT_KC"   ~ "401326628",
game_id == "2021_19_ARI_LA"   ~ "401326625",
TRUE ~ espn
),
started = is.null(httr::content(httr::GET(game_url, query = list(event = espn)))[["drives"]][["previous"]])
) %>%
dplyr::filter(started == 1) %>%
# dplyr::filter(grepl("2016", game_id, fixed = T)) %>%
# dplyr::filter(espn == "401326626") %>%
dplyr::select(game_id, espn, home_team, away_team, week)
# get live games
live_games <- readRDS(url(
"http://www.habitatring.com/games_alt.rds"
)) %>%
dplyr::filter(
# hasn't finished yet
is.na(result),
# happening today
gameday == as.character(lubridate::today("US/Pacific"))
) %>%
dplyr::mutate(
# there's probably a better way to do this but it seems to work
#
espn = dplyr::case_when(
# hard code for playoff games not in Lee's file
game_id == "2021_19_LV_CIN"   ~ "401326627",
game_id == "2021_19_NE_BUF"   ~ "401326626",
game_id == "2021_19_PHI_TB"   ~ "401326630",
game_id == "2021_19_SF_DAL"   ~ "401326629",
game_id == "2021_19_PIT_KC"   ~ "401326628",
game_id == "2021_19_ARI_LA"   ~ "401326625",
TRUE ~ espn
)
) %>%
rowwise() %>%
mutate(
started = is.null(httr::content(httr::GET(game_url, query = list(event = espn)))[["drives"]][["previous"]])
) %>%
ungroup() %>%
dplyr::filter(started == 1) %>%
# dplyr::filter(grepl("2016", game_id, fixed = T)) %>%
# dplyr::filter(espn == "401326626") %>%
dplyr::select(game_id, espn, home_team, away_team, week)
# get live games
live_games <- readRDS(url(
"http://www.habitatring.com/games_alt.rds"
)) %>%
dplyr::filter(
# hasn't finished yet
is.na(result),
# happening today
gameday == as.character(lubridate::today("US/Pacific"))
) %>%
dplyr::mutate(
# there's probably a better way to do this but it seems to work
#
espn = dplyr::case_when(
# hard code for playoff games not in Lee's file
game_id == "2021_19_LV_CIN"   ~ "401326627",
game_id == "2021_19_NE_BUF"   ~ "401326626",
game_id == "2021_19_PHI_TB"   ~ "401326630",
game_id == "2021_19_SF_DAL"   ~ "401326629",
game_id == "2021_19_PIT_KC"   ~ "401326628",
game_id == "2021_19_ARI_LA"   ~ "401326625",
TRUE ~ espn
)
) %>%
rowwise() %>%
mutate(
started = !is.null(httr::content(httr::GET(game_url, query = list(event = espn)))[["drives"]][["previous"]])
) %>%
ungroup() %>%
dplyr::filter(started == 1) %>%
# dplyr::filter(grepl("2016", game_id, fixed = T)) %>%
# dplyr::filter(espn == "401326626") %>%
dplyr::select(game_id, espn, home_team, away_team, week)
# get live games
live_games <- readRDS(url(
"http://www.habitatring.com/games_alt.rds"
)) %>%
dplyr::filter(
# hasn't finished yet
is.na(result),
# happening today
gameday == as.character(lubridate::today("US/Pacific"))
) %>%
dplyr::mutate(
espn = dplyr::case_when(
# hard code for playoff games not in Lee's file
game_id == "2021_19_LV_CIN"   ~ "401326627",
game_id == "2021_19_NE_BUF"   ~ "401326626",
game_id == "2021_19_PHI_TB"   ~ "401326630",
game_id == "2021_19_SF_DAL"   ~ "401326629",
game_id == "2021_19_PIT_KC"   ~ "401326628",
game_id == "2021_19_ARI_LA"   ~ "401326625",
TRUE ~ espn
)
) %>%
rowwise() %>%
## Check that drive info exists on ESPN (i.e., that it's started)
mutate(
started = !is.null(httr::content(httr::GET(game_url, query = list(event = espn)))[["drives"]][["previous"]])
) %>%
ungroup() %>%
# dplyr::filter(started == 1) %>%
dplyr::filter(espn = "401326626")
# get live games
live_games <- readRDS(url(
"http://www.habitatring.com/games_alt.rds"
)) %>%
dplyr::filter(
# hasn't finished yet
is.na(result),
# happening today
gameday == as.character(lubridate::today("US/Pacific"))
) %>%
dplyr::mutate(
espn = dplyr::case_when(
# hard code for playoff games not in Lee's file
game_id == "2021_19_LV_CIN"   ~ "401326627",
game_id == "2021_19_NE_BUF"   ~ "401326626",
game_id == "2021_19_PHI_TB"   ~ "401326630",
game_id == "2021_19_SF_DAL"   ~ "401326629",
game_id == "2021_19_PIT_KC"   ~ "401326628",
game_id == "2021_19_ARI_LA"   ~ "401326625",
TRUE ~ espn
)
) %>%
rowwise() %>%
## Check that drive info exists on ESPN (i.e., that it's started)
mutate(
started = !is.null(httr::content(httr::GET(game_url, query = list(event = espn)))[["drives"]][["previous"]])
) %>%
ungroup() %>%
# dplyr::filter(started == 1) %>%
dplyr::filter(espn == "401326626") %>%
dplyr::select(game_id, espn, home_team, away_team, week)
# get updated plays from ongoing games
plays <- purrr::map_df(1 : nrow(live_games), function(x) {
message(glue::glue("{x}: game {live_games %>% dplyr::slice(x) %>% pull(espn)}"))
espnscrapeR::get_nfl_pbp(live_games %>% dplyr::slice(x) %>% pull(espn))
})
library(espnscrapeR)
# get updated plays from ongoing games
plays <- purrr::map_df(1 : nrow(live_games), function(x) {
message(glue::glue("{x}: game {live_games %>% dplyr::slice(x) %>% pull(espn)}"))
espnscrapeR::get_nfl_pbp(live_games %>% dplyr::slice(x) %>% pull(espn))
})
espnscrapeR::get_nfl_pbp("401326627")
espnscrapeR::get_nfl_pbp("401326626")
# get live games
live_games <- readRDS(url(
"http://www.habitatring.com/games_alt.rds"
)) %>%
dplyr::filter(
# hasn't finished yet
is.na(result),
# happening today
gameday == as.character(lubridate::today("US/Pacific"))
) %>%
dplyr::mutate(
espn = dplyr::case_when(
# hard code for playoff games not in Lee's file
game_id == "2021_19_LV_CIN"   ~ "401326627",
game_id == "2021_19_NE_BUF"   ~ "401326626",
game_id == "2021_19_PHI_TB"   ~ "401326630",
game_id == "2021_19_SF_DAL"   ~ "401326629",
game_id == "2021_19_PIT_KC"   ~ "401326628",
game_id == "2021_19_ARI_LA"   ~ "401326625",
TRUE ~ espn
)
) %>%
rowwise() %>%
## Check that drive info exists on ESPN (i.e., that it's started)
mutate(
started = !is.null(httr::content(httr::GET(game_url, query = list(event = espn)))[["drives"]][["previous"]])
) %>%
ungroup() %>%
# dplyr::filter(started == 1) %>%
dplyr::filter(espn == "401326626") %>%
dplyr::select(game_id, espn, home_team, away_team, week)
# get live games
live_games <- readRDS(url(
"http://www.habitatring.com/games_alt.rds"
)) %>%
# dplyr::filter(
#
#   # hasn't finished yet
#   is.na(result),
#
#   # happening today
#   gameday == as.character(lubridate::today("US/Pacific"))
#
# ) %>%
dplyr::mutate(
espn = dplyr::case_when(
# hard code for playoff games not in Lee's file
game_id == "2021_19_LV_CIN"   ~ "401326627",
game_id == "2021_19_NE_BUF"   ~ "401326626",
game_id == "2021_19_PHI_TB"   ~ "401326630",
game_id == "2021_19_SF_DAL"   ~ "401326629",
game_id == "2021_19_PIT_KC"   ~ "401326628",
game_id == "2021_19_ARI_LA"   ~ "401326625",
TRUE ~ espn
)
) %>%
rowwise() %>%
## Check that drive info exists on ESPN (i.e., that it's started)
mutate(
started = !is.null(httr::content(httr::GET(game_url, query = list(event = espn)))[["drives"]][["previous"]])
) %>%
ungroup() %>%
# dplyr::filter(started == 1) %>%
dplyr::filter(espn == "401326626") %>%
dplyr::select(game_id, espn, home_team, away_team, week)
# get live games
live_games <- readRDS(url(
"http://www.habitatring.com/games_alt.rds"
)) %>%
# dplyr::filter(
#
#   # hasn't finished yet
#   is.na(result),
#
#   # happening today
#   gameday == as.character(lubridate::today("US/Pacific"))
#
# ) %>%
dplyr::mutate(
espn = dplyr::case_when(
# hard code for playoff games not in Lee's file
game_id == "2021_19_LV_CIN"   ~ "401326627",
game_id == "2021_19_NE_BUF"   ~ "401326626",
game_id == "2021_19_PHI_TB"   ~ "401326630",
game_id == "2021_19_SF_DAL"   ~ "401326629",
game_id == "2021_19_PIT_KC"   ~ "401326628",
game_id == "2021_19_ARI_LA"   ~ "401326625",
TRUE ~ espn
)
) %>%
dplyr::filter(espn == "401326626") %>%
rowwise() %>%
## Check that drive info exists on ESPN (i.e., that it's started)
mutate(
started = !is.null(httr::content(httr::GET(game_url, query = list(event = espn)))[["drives"]][["previous"]])
) %>%
ungroup() %>%
# dplyr::filter(started == 1) %>%
dplyr::select(game_id, espn, home_team, away_team, week)
# get updated plays from ongoing games
plays <- purrr::map_df(1 : nrow(live_games), function(x) {
message(glue::glue("{x}: game {live_games %>% dplyr::slice(x) %>% pull(espn)}"))
espnscrapeR::get_nfl_pbp(live_games %>% dplyr::slice(x) %>% pull(espn))
})
View(plays)
plays <- plays %>%
filter(scoring_play == 1 |
grepl("Interception", play_type, fixed = T) |
play_type == "Fumble Recovery (Opponent)" |
play_type == "Sack" |
(start_down == 4 & !grepl("Punt", play_type, fixed = T) &
play_type != "End of Half" & play_type != "Penalty" &
play_type != "End Period" & play_type != "Timeout" &
play_type != "End of Game" & play_type != "Two-minute warning"))
str_replace
?str_replace
plays <- plays %>%
mutate(play_desc = stringr::str_replace(play_desc, "\\([:digit:]*\\:[:digit:]+\\)\\s", ""))
# get live games
live_games <- readRDS(url(
"http://www.habitatring.com/games_alt.rds"
)) %>%
dplyr::filter(
# hasn't finished yet
is.na(result),
# happening today
gameday == as.character(lubridate::today("US/Pacific"))
) %>%
dplyr::mutate(
espn = dplyr::case_when(
# hard code for playoff games not in Lee's file
game_id == "2021_19_LV_CIN"   ~ "401326627",
game_id == "2021_19_NE_BUF"   ~ "401326626",
game_id == "2021_19_PHI_TB"   ~ "401326630",
game_id == "2021_19_SF_DAL"   ~ "401326629",
game_id == "2021_19_PIT_KC"   ~ "401326628",
game_id == "2021_19_ARI_LA"   ~ "401326625",
TRUE ~ espn
)
) %>%
rowwise() %>%
## Check that drive info exists on ESPN (i.e., that it's started)
mutate(
started = !is.null(httr::content(httr::GET(game_url, query = list(event = espn)))[["drives"]][["previous"]])
) %>%
ungroup() %>%
dplyr::filter(started == 1) %>%
dplyr::select(game_id, espn, home_team, away_team, week)
View(live_games)
game_id <- "401326630"
game_url <- glue::glue("http://site.api.espn.com/apis/site/v2/sports/football/nfl/summary")
raw_get <- httr::GET(game_url, query = list(event = game_id, enable = "ranks,odds,linescores,logos"))
httr::stop_for_status(raw_get)
raw_json <- httr::content(raw_get)
is.null(raw_json[["drives"]][["previous"]])
game_url <- glue::glue("http://site.api.espn.com/apis/site/v2/sports/football/nfl/summary")
# get live games
live_games <- readRDS(url(
"http://www.habitatring.com/games_alt.rds"
)) %>%
dplyr::filter(
# hasn't finished yet
is.na(result),
# happening today
gameday == as.character(lubridate::today("US/Pacific"))
) %>%
dplyr::mutate(
espn = dplyr::case_when(
# hard code for playoff games not in Lee's file
game_id == "2021_19_LV_CIN"   ~ "401326627",
game_id == "2021_19_NE_BUF"   ~ "401326626",
game_id == "2021_19_PHI_TB"   ~ "401326630",
game_id == "2021_19_SF_DAL"   ~ "401326629",
game_id == "2021_19_PIT_KC"   ~ "401326628",
game_id == "2021_19_ARI_LA"   ~ "401326625",
TRUE ~ espn
)
) %>%
rowwise() %>%
## Check that drive info exists on ESPN (i.e., that it's started)
mutate(
started = !is.null(httr::content(httr::GET(game_url, query = list(event = espn)))[["drives"]][["previous"]])
) %>%
ungroup() %>%
dplyr::filter(started == 1) %>%
dplyr::select(game_id, espn, home_team, away_team, week)
# read file of old plays
old_plays <- readr::read_csv("data/old_plays.csv") %>%
mutate(game_id = as.character(game_id),
play_id = as.character(play_id))
setwd("~/Desktop/R/My Bot/nflwinbot")
# read file of old plays
old_plays <- readr::read_csv("data/old_plays.csv") %>%
mutate(game_id = as.character(game_id),
play_id = as.character(play_id))
# get updated plays from ongoing games
plays <- purrr::map_df(1 : nrow(live_games), function(x) {
message(glue::glue("{x}: game {live_games %>% dplyr::slice(x) %>% pull(espn)}"))
espnscrapeR::get_nfl_pbp(live_games %>% dplyr::slice(x) %>% pull(espn))
})
plays <- plays %>%
mutate(play_desc = stringr::str_replace(play_desc, "\\([:digit:]*\\:[:digit:]+\\)\\s", "")) %>%
filter(scoring_play == 1 |
grepl("Interception", play_type, fixed = T) |
play_type == "Fumble Recovery (Opponent)" |
play_type == "Sack" |
(start_down == 4 & !grepl("Punt", play_type, fixed = T) &
play_type != "End of Half" & play_type != "Penalty" &
play_type != "End Period" & play_type != "Timeout" &
play_type != "End of Game" & play_type != "Two-minute warning"))
# save updated list of plays we've done
plays %>%
mutate(game_id = as.character(game_id)) %>%
select(game_id, play_id) %>%
mutate(old = 1) %>%
rbind(old_plays) %>%
distinct() %>%
readr::write_csv("data/old_plays.csv")
# get plays we haven't tweeted yet
for_tweeting <- plays %>%
mutate(game_id = as.character(game_id),
play_id = as.character(play_id)) %>%
left_join(old_plays, by = c("game_id","play_id")) %>%
filter(is.na(old))
View(for_tweeting)
